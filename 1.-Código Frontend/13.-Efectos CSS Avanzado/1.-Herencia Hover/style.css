/*HERENCIA*/
@import url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');
/* font-family: 'Open Sans', sans-serif; */
@import url('https://fonts.googleapis.com/css?family=Fjalla+One&display=swap');
/* font-family: 'Fjalla One', sans-serif; */

body{
    margin: 0px;
    padding: 0px;
    background-color: rgb(206, 206, 206);
}

/*Estilo en general para un tipo de elemento*/
p:hover{
    background-color: tomato;
    cursor: pointer;
    /*CURSOR: Sirve para darle un aspecto diferente a la que es inicialmente una flechita del mouse, hay muchisimos 
    parámetros que le puedo dar a la instrucción cursor y estos son algunos ejemplos:
    -grab: muestra una manita abierta para agarrar algo con el mouse
    -grabinng: muestra una manita cerrada para cuando ya agarré algo con el mouse
    -move: muestra 4 flechitas indicando que se puede mover ese elemento
    -zoom in: muestra la lupa con un signo + para hacer zoom y acercar la pantalla
    -zoom out: muestra la lupa con un signo - para hacer zoom y alejar la pantalla
    -wait: muestra el símbolo de cargar
    -pointer: muestra la manita apuntando que usualmente se usa para links o para elementos donde puedo hacer clic
    -etc... hay muchisimos de ellos*/
}

/*Lo que hago con esta instrucción es que todos los elementos <p></p> que estén dentro del elemento que tenga el 
siguiente id obedecerán este estilo, los elementos con etiquetas de párrafo <p></p> que tengan este id, ignorarán 
este hover pero los elementos que estén contenidos en otro elemento que tenga este id si lo obedecerán, el 
elemento no puede ser otra etiqueta <p></p> porque igual lo ingorará, debe ser un div u otro elemento*/
#nombreId p:hover{
    background-color: red;
    cursor: wait;
}


/*Este es un div con una clase cuyo hover específicamente hace que las imagenes se vuelvan más transparentes, el 
hover de la imagen no se activará cuando me posicione encima del div pero el hover del div si se activará cuando 
me posicione encima de la imagen*/
.nombreClass1{
    background-color: salmon;
}
.nombreClass1:hover{
    background-color: orchid;
}
.nombreClass1 img:hover{
    background-color: orangered;
    opacity: 0.1;
}


/*Este es un div con una clase cuyo hover específicamente hace que las imagenes se vuelvan más transparentes y sus 
párrafos cambien de color de fondo, ni el hover del párrafo ni de la imagen se activará cuando me ponga encima del 
div pero el hover del div si se activará cuando me ponga encima del párrafo o de la imagen*/
.nombreClass2{
    background-color: aqua;
}
.nombreClass2 p{
    background-color: blanchedalmond;
    color: black;
}
/*Esto funcionará cuando me sitúe encima de la imagen o encima del párrafo*/
.nombreClass2:hover{
    background-color: rgb(0, 174, 255);
}
/*Esto funcionará solamente cuando me sitúe encima de la imagen contenida en el div con la clase nombreClass2*/
.nombreClass2 img:hover{
    opacity: 0.3;
    cursor: zoom-in;
}
/*Esto funcionará solamente cuando me sitúe encima del párrafo contenido en el div con la clase nombreClass2*/
.nombreClass2 p:hover{
    background-color: black;
    color: blanchedalmond;
    cursor: zoom-out;
}


/*Se puede hacer lo mismo que hice arriba pero de una forma más especifica creando clases padre e hijo, la clase
padre será el elemento que esté de forma exterior y la clase hijo será la del elemento que esté contenido dentro 
del otro*/
.nombreClassPadre{
    background-color: palegreen;
    width: 20%;
}
/*El cambio de la clase padre se generará cuando me posicione encima de la clase hijo*/
.nombreClassPadre:hover{
    background-color: red;
}
/*Pero el hover de la clase hijo no se generará cuando me ponga encima del elemento de la clase padre*/
.nombreClassPadre .nombreClassHijo:hover{
    background-color: rgba(128, 0, 128, 0.479);
    opacity: 0.6;
    /*Este hover hará que cambie el color el fondo de la clase hijo, la transparencia de la clase hijo y el color de 
    la clase padre todo a la vez*/
}
/*Solo se pueden acceder 2 niveles en la herencia de CSS, por eso no se puede acceder clases nieto y esta línea de 
código no va a funcionar*/
.nombreClassPadre .nombreClassHijo .nombreClassSobrino:hover{
    background-color: whitesmoke;
}
/*Pero lo que si puedo hacer es cambiar elementos generales como en este caso todos los párrafos que estén 
contenidos dentro de la clase padre y de la clase hijo*/
.nombreClassPadre p:hover{
    background-color: whitesmoke;
}



/*Para poder hacer uso de la herencia y crear un efecto se puede hacer uso de una clase hijo, pero esto significa que el 
hover hecho en la clase padre no activa al hover de la clase hijo pero el hover de la clase hijo si afecta al hover de 
la clase padre*/
/*CLASE PADRE*/
.card1{
    width: 100%; 
    height: 40vh;
    position: relative;
    background-color: rgba(0, 0, 0, 0);
    opacity: 1;
    transition: opacity ease-in-out 250ms;
}
.card1:hover{
    background-color: rgba(0, 0, 0, 0.342);
}
/*CLASE HIJO*/
.card_text1{
    width: 90%; 
    height: 40vh;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    opacity: 0;
    transition: opacity ease-in-out 250ms;
    font-size: 20px;
}
.card1 .card_text1:hover{
    opacity: 1;
}



/*Para poder hacer uso de la herencia y crear un efecto se puede hacer uso de una clase hijo, pero a veces es mejor no
hacer uso nisiquiera de esa clase hijo y todo manejarlo directamente a un tipo de elemento en general y así evitar el 
conflicto de clases*/
/*CLASE PADRE*/
#card2{
    width: 20%; 
    height: 40vh;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    z-index: 0;
    overflow: hidden;
}
#card2::before{
    content: '';
    position: absolute;
    top: 5%;
    bottom: 5%;
    left: 5%;
    right: 5%;
    border-top: solid white 1px;
    border-bottom: solid white 1px;
    transform: scale(0, 1);
    transition: transform ease-in-out 250ms;
    z-index: -1;
}
#card2:hover::before{
    transform: scale(1.05, 1);
}
#card2::after{
    content: '';
    position: absolute;
    top: 5%;
    bottom: 5%;
    left: 5%;
    right: 5%;
    border-left: solid white 1px;
    border-right: solid white 1px;
    transform: scale(1, 0);
    transition: transform ease-in-out 250ms;
    z-index: -1;
}
#card2:hover::after{
    transform: scale(1, 1.05);
}
/*ELEMENTO HIJO SECTION DENTRO DE LA CLASE PADRE*/
#card2 section{
    opacity: 0;
    transition: opacity ease-in-out 250ms;
}
#card2 section:hover{
    opacity: 1;
}